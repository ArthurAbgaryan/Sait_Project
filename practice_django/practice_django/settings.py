# -*- coding: utf-8 -*-
#django-debug-toolbar
INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]
#End django-debug-toolbar


"""
Django settings for practice_django project.

Generated by 'django-admin startproject' using Django 3.2.19.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from django.contrib.messages import constants as messages


#python-dotenv

#https://pypi.org/project/python-dotenv/
from dotenv import load_dotenv
# Loading ENV
#.file.env -в корне проекта
env_path = Path('.') / '.file.env'

#env_path = '.test.env'
load_dotenv(dotenv_path=env_path)

#end python-dotenv



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tfbx&+bwgm+*zp4c+_h4ah5cy#o*ls4=zicl39089!odzu%y-q'


'''
Правильно перенаправить
в видео уроке создавался файл ".env"
у меня создан  файл ".file.env" !!
'''
#SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#разрешенные зосты
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',         #для отслеживания статистики в разных библиотеках
                                    #для того чтобы это сработало ,ниже прописывается SITE_ID
    'django.contrib.staticfiles',

    # устан-е пакеты
    "debug_toolbar",
    #https://docs.djangoproject.com/en/4.2/ref/contrib/humanize/
    'django.contrib.humanize',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.google',

    'blog.apps.BlogConfig',             #такой путь указ-ся когда приложения будут связаны между собой
    'pandas_app',
    'forms_app',
    'crispy_forms',
    'ckeditor',
    'django_extensions',
    
    
    #мои приложения
    #https://github.com/un1t/django-cleanup
    'django_cleanup.apps.CleanupConfig', #библиотека очишающая не нужные файлы,ставиться
                                         #обязательно в конце
]

SITE_ID=1

#Выполняют те события которые происходят до загрузки страницы(между нажатием ссылки и прогрузкой стр-ы)
#То есть промежуточные слой настроек
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    #django-debug-toolbar
    #https://django-debug-toolbar.readthedocs.io/en/latest/installation.html
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    #End django-debug-toolbar
]

ROOT_URLCONF = 'practice_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],#папка где джанго будет искать шаблоны
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [    #то что будет работать постоянно вне зависимости от шаблона
                                        #контекстные процессоры
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#django-allauth
#https://django-allauth.readthedocs.io/en/latest/installation.html
AUTHENTICATION_BACKENDS = [

    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',

]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    },
    'github': {
        'SCOPE': [
            'user',
            'repo',
            'read:org',
        ],
    }
}

#End django-allauth
#указывает где находиться wsgi сервер
WSGI_APPLICATION = 'practice_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db_practice_django_1.sqlite3', #название базового файла
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'


TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

#https://docs.djangoproject.com/en/4.2/ref/settings/#static-root
STATIC_ROOT = os.path.join(BASE_DIR,'static')

STATICFILES_DIRS = [                    #позволяет достать статические файлы из любого приложения
    os.path.join(BASE_DIR,'other_static')
]

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

MEDIA_URL='/media/'                 #показывает как будет наз-ся папка с загруженными файлами
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# django-crispy-forms
# Формы для шаблонов
# https://django-crispy-forms.readthedocs.io/en/latest/install.html#installing-django-crispy-forms

#CRISPY_TEMPLATE_PACK = 'uni-form' #Форма бутстрап
CRISPY_TEMPLATE_PACK = 'bootstrap4'
#CRISPY_TEMPLATE_PACK = 'uni_form'


# End django-crispy-forms

#django-ckeditor

CKEDITOR_CONFIGS = {
    'default': {
        'width':'auto',
    },
}

#End django-ckeditor

# django-channels
'''
ASGI_APPLICATION = "practice_django.routing.application"

CHANNEL_LAYERS = {
    "default":{
        "BACKEND":"channels.layers.InMemoryChannelLayer"
    },
}
'''
# End django-channels
GOOGLE_RECAPTCHA_SECRET_KEY = os.getenv("GOOGLE_RECAPTCHA_SECRET_KEY")
# email

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = os.getenv("EMAIL_PORT")
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASS')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_EMAIL_USER')


'''этот фрагмент кода должен быть в файле .env что бы не загружать settings.py'''
GOOGLE_RECAPTCHA_SECRET_KEY='6LdVwogdAAAAA47894GKxqjEnHd7u5z-_tq91n'
DEBUG=True
EMAIL_PORT=587
EMAIL_USER='abgaryanarthurelina@gmail.com'
EMAIL_PASS='papa9464'
DEFAULT_FROM_EMAIL = 'abgaryanarthurelina@gmail.com'

# End Email

MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
}

# в производстве убрать.
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"